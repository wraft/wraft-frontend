import React, { useEffect, useState } from 'react';
import { Box, Flex, Button, Text } from 'rebass';
import { useForm } from 'react-hook-form';

import Field from './FieldText';
import { createEntity, loadEntity } from '../utils/models';
import { useStoreState } from 'easy-peasy';

// Generated by https://quicktype.io

export interface Comments {
  total_pages: number;
  total_entries: number;
  page_number: number;
  comments: Comment[];
}

export interface Comment {
  updated_at: string;
  parent_id: null;
  master_id: string;
  master: string;
  is_parent: boolean;
  inserted_at: string;
  id: string;
  comment: string;
}

interface CommentFormProps {
  master: string;
  master_id: string;
}

const CommentForm = (props: CommentFormProps) => {
  const { register, handleSubmit, errors } = useForm();
  const token = useStoreState(state => state.auth.token);

  const [comments, setComments] = useState<Array<Comment>>([]);

  const { master, master_id } = props;

  const onSubmit = (data: any) => {
    const commentExample = {
      master_id: master_id,
      master: master,
      is_parent: true,
      comment: data.body,
    };
    console.log('creating comment');
    createEntity(commentExample, 'comments', token);
    loadEntity(token, `comments?master_id=${master_id}&page=1`, onLoadComments);
  };
  const onLoadComments = (data: any) => {
    if (data.comments) {
      setComments(data.comments);
    }
  };

  useEffect(() => {
    loadEntity(token, `comments?master_id=${master_id}&page=1`, onLoadComments);
  }, [master_id, token]);

  return (
    <Box as="form" onSubmit={handleSubmit(onSubmit)} py={3} width={1} mt={4}>
      {comments && comments.length > 0 && (
        <Box>
          {comments.map((comment: Comment) => (
            <Box pb={2} pt={2} mb={1}>
              <Text fontSize={0}>{comment.comment}</Text>
              <Text mt={1} color="#555" fontSize={0}>{comment.inserted_at}</Text>
            </Box>
          ))}
        </Box>
      )}
      <Box>
        <Text mb={3} mt={3} fontSize={1} fontWeight={500}>
          Add Comment
        </Text>
      </Box>
      <Box mx={0} mb={3} width={1}>
        <Flex>
          <Box width={7 / 12}>
            <Field
              name="body"
              label="Your comment"
              defaultValue=""
              register={register}
            />
          </Box>
          {errors.exampleRequired && <Text>This field is required</Text>}
        </Flex>
      </Box>
      <Button ml={2}>Add Comment</Button>
    </Box>
  );
};
export default CommentForm;
