import React, { useEffect, useState } from 'react';
import { Box, Flex, Button, Text, Image } from 'theme-ui';
import { useForm } from 'react-hook-form';

import Field from './FieldText';
import { API_HOST, createEntity, loadEntity } from '../utils/models';
import { useStoreState } from 'easy-peasy';
import { TimeAgo } from './ContentDetail';

// Generated by https://quicktype.io

export interface Comments {
  total_pages: number;
  total_entries: number;
  page_number: number;
  comments: Comment[];
}

export interface Comment {
  updated_at: string;
  parent_id: null;
  master_id: string;
  master: string;
  is_parent: boolean;
  inserted_at: string;
  id: string;
  comment: string;
  profile: Profile;
}

interface CommentFormProps {
  master: string;
  master_id: string;
}

export interface Profile {
  uuid: string;
  profile_pic: string;
  name: string;
  gender: string;
  dob: Date;
}

export interface User {
  updated_at: Date;
  name: string;
  inserted_at: Date;
  id: string;
  email_verify: boolean;
  email: string;
}

const CommentForm = (props: CommentFormProps) => {
  const { register, handleSubmit, errors } = useForm();
  const token = useStoreState(state => state.auth.token);

  const [comments, setComments] = useState<Array<Comment>>([]);

  const { master, master_id } = props;

  const onSubmit = (data: any) => {
    const commentExample = {
      master_id: master_id,
      master: master,
      is_parent: true,
      comment: data.body,
    };
    createEntity(commentExample, 'comments', token);
    loadEntity(token, `comments?master_id=${master_id}&page=0`, onLoadComments);
  };
  const onLoadComments = (data: any) => {
    if (data.comments) {
      setComments(data.comments);
    }
  };

  useEffect(() => {
    loadEntity(token, `comments?master_id=${master_id}&page=1`, onLoadComments);
  }, [master_id, token]);

  return (
    <Box as="form" onSubmit={handleSubmit(onSubmit)} py={3} mt={4}>
      {comments && comments.length > 0 && (
        <Box sx={{ maxWidth: '40vh' }}>
          {comments.map((comment: Comment) => (
            <Box
              // pb={2}
              // pt={2}
              // mb={1}
              sx={{
                // bg: 'blue.0',
                borderBottom: 'solid 1px',
                borderColor: 'gray.3',
                pb: 3,
                mb: 2,
              }}>
              <Flex sx={{ display: 'inline-flex' }}>
                <Box sx={{ pl: 0 }}>
                  <Flex
                    sx={{
                      // ml: -4,
                      pt: 0,
                      width: 'auto',
                      // bg: 'red.1',
                      // border: 'solid 1px',
                      // borderColor: 'red.3',
                      // borderRadius: 99,
                      pr: 2,
                      alignItems: 'flex-start',
                    }}>
                    <Image
                      sx={{
                        // border: 'solid 2px',
                        // borderColor: 'red.5',
                        borderRadius: 99,
                        mr: 1,
                        width: '28px',
                        height: '28px',
                      }}
                      src={`${API_HOST}${comment?.profile?.profile_pic}`}
                    />
                    <Text
                      sx={{
                        pl: 0,
                        fontSize: 1,
                        pb: 0,
                        fontWeight: 600,
                        minWidth: '120px',
                        pt: 0,
                        ml: 2,
                        color: 'blue.9',
                      }}>
                      {comment?.profile?.name}
                    </Text>

                    <Box as="span" pl={2}>
                      <TimeAgo time={comment?.updated_at} />
                    </Box>
                  </Flex>
                  {/* <Box sx={{ bg: 'white' }}>
                    <Text
                      as="p"
                      sx={{ mt: 0, color: 'primary', fontSize: 1, pt: 0, pl: 4, m: 0 }}>
                      {comment.comment}
                    </Text>
                  </Box> */}
                </Box>
              </Flex>
              <Box sx={{ pl: 4 }}>
                <Text
                  as="p"
                  sx={{
                    mt: 0,
                    color: 'gray.7',
                    fontSize: 1,
                    pt: 0,
                    lineHeight: 1.35,
                    // pl: '24px',
                    pl: 2,
                    m: 0,
                  }}>
                  {comment.comment}
                </Text>
              </Box>
            </Box>
          ))}
        </Box>
      )}
      {/* <Box>
        <Text mb={3} mt={3}>
          Add Comment
        </Text>
      </Box> */}
      <Box mx={0} mb={0}>
        <Flex>
          <Box>
            <Field name="body" label="" defaultValue="" register={register} />
          </Box>
          {errors.body && <Text>This field is required</Text>}
        </Flex>
      </Box>
      <Button ml={0}>Add Comment</Button>
    </Box>
  );
};
export default CommentForm;
